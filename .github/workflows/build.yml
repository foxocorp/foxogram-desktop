name: Build Desktop

permissions:
  contents: write

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Qt
        uses: jurplel/install-qt-action@12aa0336e1e410b3c6dff5e0722547f7a37e8c60 # v4.2.1
        with:
          version: '6.8.0'
          cache: true

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@3b1f8f94a2f8254bd26914c4ab9474d4f0015f67 # v6

      - name: Run sccache
        uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9

      - name: Cache cmake-build
        uses: actions/cache@v4
        with:
          key: cmake-build-${{ runner.os }}-${{ runner.arch }}
          path: cmake-build
          restore-keys: cmake-build-${{ runner.os }}-${{ runner.arch }}

      - name: Build Foxogram
        shell: pwsh
        env:
          SCCACHE_GHA_ENABLED: true
        run: |
          if ($env:RUNNER_OS -eq "Windows") {
            $env:OPENSSL_ROOT_DIR = "C:/Program Files/OpenSSL/"
          }
          
          make build-${{ github.ref_name == 'main' && 'main' || github.ref_name == 'dev' && 'dev' || 'dev' }}

      - name: Archive Foxogram
        shell: pwsh
        run: |
          if ($env:RUNNER_OS -eq "Windows") {
            7z a foxogram-win.zip foxogram_install
          }
          elseif ($env:RUNNER_OS -eq "macOS") {
            zip -r foxogram-macos.zip foxogram_install/FoxogramDesktop.app
          }
          else {
            zip -r foxogram-linux.zip foxogram_install
          }

      - name: Upload Release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          name: Foxogram ${{ github.run_id }}
          tag_name: foxogram-${{ github.run_id }}
          files: "foxogram-*.zip"
